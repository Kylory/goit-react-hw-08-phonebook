{"version":3,"sources":["components/AppBar/AppBar.module.css","components/SearchContacts/SearchContacts.module.css","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/contacts/contactsSelectors.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js","redux/auth/AuthSlice.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/ContactForm/ContactForm.module.css","components/UserMenu/UserMenu.module.css","components/ContactsList/ContactsList.module.css","components/Snackbar.jsx","components/Container/Container.module.css"],"names":["module","exports","axios","defaults","baseURL","DB_fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","DB_postContact","name","number","post","DB_deleteContact","id","delete","addContact","createAction","payload","shortid","generate","deleteContact","filterContacts","contactsReducer","createReducer","contactsOperations","fulfilled","state","filter","contact","filterReducer","isLoadingReducer","pending","rejected","errorReducer","rootReducer","combineReducers","contactsList","isLoading","error","getContacts","contacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","to","PublicRoute","restricted","shouldRedirect","Container","className","styles","container","AuthNav","link","activeClassName","activeLink","Navigation","exact","UserMenu","getUserName","dispatch","useDispatch","Button","button","type","onClick","authOperations","logOut","size","variant","AppBar","nav","ContactForm","useState","setName","setNumber","alreadyInContacts","setAlreadyInContacts","isButtonDisable","contactsSelectors","handleChange","e","target","value","reset","message","contactForm","onSubmit","preventDefault","find","noValidate","autoComplete","TextField","onChange","label","disabled","ContactsList","filteredContacts","useEffect","map","IconButton","deleteItem","SearchContacts","searchContacts","HomeView","lazy","RegisterView","LogInView","App","isFetchingCurrentUser","getUserInfo","refreshPage","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById","authSlice","createSlice","initialState","user","email","token","registerUserRejected","logInUserRejected","extraReducers","action","headers","common","Authorization","registerUser","credentials","logIn","thunkAPI","getState","LStoken","PositionedSnackbar","element","React","open","vertical","horizontal","setState","anchorOrigin","onClose"],"mappings":"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","file":"static/js/main.4bee6b2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__qbwGA\",\"link\":\"AppBar_link__1K-sX\",\"activeLink\":\"AppBar_activeLink__3LUBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContacts\":\"SearchContacts_searchContacts__8ZrJa\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport shortid from \"shortid\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const DB_fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const DB_postContact = createAsyncThunk(\r\n  \"contacts/postContact\",\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\"/contacts\", {\r\n        name: `${name}`,\r\n        number: `${number}`,\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const DB_deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAction(\r\n  \"contactsList/addContact\",\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  })\r\n);\r\n\r\nexport const deleteContact = createAction(\"contacts/deleteContact\");\r\nexport const filterContacts = createAction(\"contacts/filterContacts\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { contactsOperations } from \"redux/contacts\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [contactsOperations.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsOperations.DB_postContact.fulfilled]: () => {},\r\n  [contactsOperations.deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [contactsOperations.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [contactsOperations.DB_fetchContacts.pending]: () => true,\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.DB_fetchContacts.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_postContact.pending]: () => true,\r\n  [contactsOperations.DB_postContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_postContact.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_deleteContact.pending]: () => true,\r\n  [contactsOperations.DB_deleteContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [contactsOperations.DB_fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_fetchContacts.pending]: () => null,\r\n\r\n  [contactsOperations.DB_postContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_postContact.pending]: () => null,\r\n\r\n  [contactsOperations.DB_deleteContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_deleteContact.pending]: () => null,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contactsList: contactsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n});\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.contactsList;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst isLoading = (state) => state.contacts.isLoading;\r\nconst error = (state) => state.contacts.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    if (contacts && filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      const filteredContact = contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n\r\n      return filteredContact;\r\n    }\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, isLoading, error };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactsReducer } from \"redux/contacts\";\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = (getDefaultMiddleware) => [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer.rootReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  redirectTo = \"/\",\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import styles from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div className={styles.AuthNav}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          className={styles.link}\r\n          activeClassName={styles.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { authSelectors, authOperations } from \"redux/auth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={styles.UserMenu}>\r\n      <AccountCircleOutlinedIcon />\r\n      <span className={styles.name}>Hello, {name}</span>\r\n      <Button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          dispatch(authOperations.logOut());\r\n        }}\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n      >\r\n        Log out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport styles from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </nav>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport PositionedSnackbar from \"../Snackbar\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [alreadyInContacts, setAlreadyInContacts] = useState(false);\r\n  const isButtonDisable = name === \"\" || number === \"\";\r\n\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setAlreadyInContacts(false);\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts && contacts.find((contact) => contact.name === name)) {\r\n      setAlreadyInContacts(true);\r\n      return;\r\n    }\r\n\r\n    setAlreadyInContacts(false);\r\n\r\n    dispatch(contactsOperations.addContact({ name: name, number: number }));\r\n\r\n    (async () => {\r\n      await dispatch(\r\n        contactsOperations.DB_postContact({\r\n          name: name,\r\n          number: number,\r\n        })\r\n      );\r\n      await dispatch(contactsOperations.DB_fetchContacts());\r\n    })();\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alreadyInContacts && (\r\n        <PositionedSnackbar message={name + \" is already in contacts\"} />\r\n      )}\r\n      <form\r\n        className={styles.contactForm}\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          className={styles.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          size=\"small\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <TextField\r\n          className={styles.number}\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          type=\"number\"\r\n          value={number}\r\n          size=\"small\"\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button\r\n          className={styles.button}\r\n          disabled={isButtonDisable}\r\n          type=\"submit\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n        >\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"redux/contacts\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nexport default function ContactsList() {\r\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const error = useSelector(contactsSelectors.error);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(contactsOperations.DB_fetchContacts());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  async function deleteItem(id) {\r\n    dispatch(contactsOperations.deleteContact(id));\r\n    await dispatch(contactsOperations.DB_deleteContact(id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <div className={styles.error}>{error.message}, no conection to DB</div>\r\n      ) : (\r\n        <ul className={styles.ContactsList}>\r\n          {filteredContacts &&\r\n            filteredContacts.map((contact) => (\r\n              <li key={contact.id}>\r\n                {contact.name}\r\n                {\": \"}\r\n                {contact.number}\r\n                <IconButton\r\n                  className={styles.button}\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    deleteItem(contact.id);\r\n                  }}\r\n                >\r\n                  <CancelTwoToneIcon />\r\n                </IconButton>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"redux/contacts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport styles from \"./SearchContacts.module.css\";\r\n\r\nexport default function SearchContacts() {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <TextField\r\n      className={styles.searchContacts}\r\n      onChange={(e) =>\r\n        dispatch(contactsOperations.filterContacts(e.target.value))\r\n      }\r\n      name=\"filter\"\r\n      type=\"text\"\r\n      value={filter}\r\n      size=\"small\"\r\n      label=\"Find contacts by name\"\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n}\r\n","import { Switch } from \"react-router-dom\";\r\nimport { useEffect, Suspense, lazy } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authOperations, authSelectors } from \"./redux/auth\";\r\nimport { contactsOperations } from \"redux/contacts\";\r\n\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport PublicRoute from \"components/PublicRoute\";\r\n\r\nimport Container from \"components/Container/Container\";\r\nimport AppBar from \"components/AppBar/AppBar\";\r\nimport ContactForm from \"components/ContactForm/ContactForm\";\r\nimport ContactsList from \"components/ContactsList/ContactsList\";\r\nimport SearchContacts from \"components/SearchContacts/SearchContacts\";\r\n\r\nconst HomeView = lazy(() => import(\"./components/HomeView/HomeView\"));\r\nconst RegisterView = lazy(() =>\r\n  import(\"./components/RegisterView/RegisterView\")\r\n);\r\nconst LogInView = lazy(() => import(\"./components/LogInView/LogInView\"));\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n  const isFetchingCurrentUser = useSelector(\r\n    authSelectors.isFetchingCurrentUser\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function refreshPage() {\r\n      await dispatch(authOperations.getUserInfo());\r\n      if (isLoggedIn) {\r\n        dispatch(contactsOperations.DB_fetchContacts());\r\n      }\r\n    }\r\n    refreshPage();\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Switch>\r\n          <Suspense fallback={\"\"}>\r\n            <PublicRoute path=\"/\" exact>\r\n              <HomeView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <ContactForm />\r\n              <SearchContacts />\r\n              <ContactsList />\r\n            </PrivateRoute>\r\n\r\n            <PublicRoute path=\"/register\" restricted>\r\n              <RegisterView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n              <LogInView />\r\n            </PublicRoute>\r\n          </Suspense>\r\n        </Switch>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport * as authOperations from \"./authOperations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n  registerUserRejected: false,\r\n  logInUserRejected: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.registerUser.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.registerUserRejected = false;\r\n    },\r\n\r\n    [authOperations.registerUser.rejected](state, _) {\r\n      state.registerUserRejected = true;\r\n    },\r\n\r\n    [authOperations.registerUserRejected](state, _) {\r\n      state.registerUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.logInUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logIn.rejected](state, _) {\r\n      state.logInUserRejected = true;\r\n    },\r\n\r\n    [authOperations.logInUserRejected](state, _) {\r\n      state.logInUserRejected = false;\r\n    },\r\n\r\n    [authOperations.logOut.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperations.getUserInfo.pending](state, _) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n\r\n    [authOperations.getUserInfo.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n\r\n    [authOperations.getUserInfo.rejected](state, _) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","const getUserName = (state) => state.auth.user.name;\r\nconst isLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst registerUserRejected = (state) => state.auth.registerUserRejected;\r\nconst isFetchingCurrentUser = (state) => state.auth.isFetchingCurrentUser;\r\nconst logInUserRejected = (state) => state.auth.logInUserRejected;\r\n\r\nexport {\r\n  getUserName,\r\n  isLoggedIn,\r\n  isFetchingCurrentUser,\r\n  registerUserRejected,\r\n  logInUserRejected,\r\n};\r\n","import axios from \"axios\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/signup\", credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/login\", credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  \"auth/logout\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post(\"/users/logout\");\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUserInfo = createAsyncThunk(\r\n  \"auth/getUserInfo\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const LStoken = state.auth.token;\r\n\r\n    if (LStoken === null) {\r\n      return thunkAPI.rejectWithValue(5);\r\n    }\r\n\r\n    token.set(LStoken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const logInUserRejected = createAction(\"auth/logInUserRejected\");\r\nexport const registerUserRejected = createAction(\"auth/registerUserRejected\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1M0VJ\",\"activeLink\":\"AuthNav_activeLink__cXZet\",\"AuthNav\":\"AuthNav_AuthNav__7YtDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2Rnfn\",\"activeLink\":\"Navigation_activeLink__3f7st\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2gfq1\",\"name\":\"ContactForm_name__3Piu-\",\"number\":\"ContactForm_number__2nJth\",\"button\":\"ContactForm_button__3vVzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__3Zyqo\",\"name\":\"UserMenu_name__1FmZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__1vydB\",\"error\":\"ContactsList_error__3_6c6\"};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport * as authOperations from \"redux/auth/authOperations\";\r\n\r\nexport default function PositionedSnackbar({ element, message }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = React.useState({\r\n    open: true,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n    switch (element) {\r\n      case \"logInUserRejected\":\r\n        dispatch(authOperations.logInUserRejected());\r\n        break;\r\n\r\n      case \"registerUserRejected\":\r\n        dispatch(authOperations.registerUserRejected());\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        message={message}\r\n        key={vertical + horizontal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__GAYyQ\"};"],"sourceRoot":""}